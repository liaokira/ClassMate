#
# CSE186 Assignment 8 Backend
#

openapi: '3.0.3'

info:
  description: CSE186 Assignment 8 Backend
  version: 0.1.0
  title: CSE186 Assignment 8 Backend

servers:
  - url: http://localhost:3010/v0

paths:

  /register:
    post:
      description: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registerCredentials'
      responses:
        201:
          description: 'Successful registration'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: 'User already exists'

  /login:
    post:
      description: Log in an existing user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credentials'
      responses:
        200:
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        401:
          description: Invalid credentials

  /profile:
    get:
      description: Get user profile
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          description: Profile found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        404:
          description: Profile not found
        500:
          description: Server error

components:
  schemas:
    Credentials:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
        - email
        - password

    registerCredentials:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
        name:
          type: string
      required:
        - email
        - password
        - name

    User:
      type: object
      properties:
        name:
          type: string
        accessToken:
          type: string
      required:
        - name
        - accessToken

    Profile:
      type: object
      properties:
        name:
          type: string
        bio_data:
          type: string
        classes:
          type: array
          items:
            type: string

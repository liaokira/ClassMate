# Docker Compose v2 example
# Remove or rename this file to "docker-compose.yml" if you're using older docker-compose v1.x

services:
  db:
    container_name: ClassMate_db
    image: postgres:15.10
    restart: always
    user: postgres
    
    # This environment sets up user/pass & DB name
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: test
      POSTGRES_DB: example

    # Persist DB data across container restarts
    volumes:
      - db-data:/var/lib/postgresql/data

    # Expose port to host
    ports:
      - "5432:5432"

    # Postgres health check
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrations:
    # Use the same Dockerfile as your Node server, which now has `psql` installed
    build:
      context: .
    # Wait until the db service is healthy, i.e. passing pg_isready
    depends_on:
      db:
        condition: service_healthy

    # Provide the DB password for psql
    environment:
      PGPASSWORD: "test"

    # We run a custom command (init_db.sh) to apply schema & data
    command: ["sh", "/usr/src/app/init_db.sh"]

    # Do not restart the migration container once done
    restart: "no"

  server:
    build:
      context: .
    # Wait for migrations to finish successfully before starting the server
    depends_on:
      migrations:
        condition: service_completed_successfully

    environment:
      NODE_ENV: production

    # Expose port to host
    ports:
      - "3010:3010"

volumes:
  db-data:
